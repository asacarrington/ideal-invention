@model Lumia_Trial.Models.CompanyViewModel


@using (Html.BeginForm("Second", "Company")) { 

    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })

        @Html.HiddenFor(model => model.ContactName, new { htmlAttributes = new { @class = "form-control" } })

        @Html.HiddenFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })

        @Html.HiddenFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })

        @Html.HiddenFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })

        @Html.HiddenFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })

        @Html.HiddenFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })

        @Html.HiddenFor(model => model.SelectedDateGuid, new { htmlAttributes = new { @class = "form-control" } })

        @Html.HiddenFor(model => model.RegionGuid, new { htmlAttributes = new { @class = "form-control" } })

        <br/>
        <!-- Form 2 starts -->
    <div id="form-part-two">
        <div class="form-group">
            @Html.LabelFor(model => model.HandsetOpotunitiesId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.HandsetOpotunitiesId, new SelectList(Model.HandsetOpotunities, "Id", "Name", Model.HandsetOpotunities.SingleOrDefault(m => m.Id == Model.HandsetOpotunitiesId)), new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.HandsetOpotunitiesId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HandsetRefreshDate, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.HandsetRefreshDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.HandsetRefreshDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentHandsetProvider, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentHandsetProvider, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.CurrentHandsetProvider, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentHandsetOperator, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentHandsetOperator, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.CurrentHandsetOperator, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsTermsAcepted, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsTermsAcepted, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.IsTermsAcepted, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsSharedInformationAllowed, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsSharedInformationAllowed, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.IsSharedInformationAllowed, "", new {@class = "text-danger"})
            </div>
        </div>

        <div>Devices</div>
        <div class="form-group">

            @for (int i = 0; i < Model.Devices.Count; i++)
            {
                 if(Model.Devices[i].Enabled)
                 {
                     <div class="col-md-10">
                         @Html.HiddenFor(x => x.Devices[i].Name)
                         @Html.CheckBoxFor(x => x.Devices[i].Checked, htmlAttributes: new { @class = "control-label col-md-2 enabled" })
                         @Html.LabelFor(x => x.Devices[i].Checked, Model.Devices[i].Name)
                     </div>
                }
                else
                {
                    <div class="col-md-10">
                        @Html.HiddenFor(x => x.Devices[i].Name)
                        @Html.CheckBoxFor(x => x.Devices[i].Checked, htmlAttributes: new { @class = "control-label col-md-2 disabled" })
                        @Html.LabelFor(x => x.Devices[i].Checked, Model.Devices[i].Name)
                    </div>
                }
            }
        </div>
        <!-- Form 2 ends -->

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-default btn-primary"/>
            </div>
        </div>
    </div>
        </div>
}
